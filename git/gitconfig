[alias]
    # View abbreviated SHA, description, and history graph of the latest 20 commits
    l = log --oneline -n 20 --graph --abbrev-commit

    # View the current working tree status using the short format
    s = status -s

    # Show the diff between the latest commit and the current state
    d = !"git diff-index --quiet HEAD -- || clear; git --no-pager diff --path-with-stat"

    # Color graph log view
    graph = log --graph --color --pretty=format:"%C(yellow)%H%C(green)%d%C(reset)%n%x20%cd%n%x20%cn%x20(%ce)%n%x20%s%n"

    # Show files part of HEAD
    files = show --pretty="" --name-status

    unstage = reset --

    # Show verbose output about tags, branches or remotes
    tags = tag -l
    branches = branch -a
    remotes = remote -v

    # Amend the currently staged files to the latest commit
    amend = commit --amend --reuse-message=HEAD

    # List contributors with number of commits
    contributors = shortlog --summary --numbered
    
    # Find branches containing commit
    fb = "!f() { git branch -a --contains $1; }; f"

    # Find tags containing commit
    ft = "!f() { git describe --always --contains $1; }; f"

    # Find commits by source code
    fc = "!f() { git log --pretty=format:'%C(yellow)%h	%Cblue%ad  %Creset%s%Cgreen  [%cn] %Cred%d' --decorate --date=short -S$1; }; f"

    # Find commits by commit message
    fm = "!f() { git log --pretty=format:'%C(yellow)%h	%Cblue%ad  %Creset%s%Cgreen  [%cn] %Cred%d' --decorate --date=short --grep=$1; }; f"

    last = log -10 --all --date-order

    top = !git log --format=format:%an | sort | uniq -c | sort -r | head -n 20

    stash-search = "!f() { git show $(git stash list | cut -d\":\" -f 1) | grep \"$@\" ; }; f" 

[branch "merge"]
    optons = --no-ff
[core]
    excludesfile = ~/.gitignore_global
[diff]
    colorMoved = zebra
[filter "lfs"]
    clean = git-lfs clean -- %f
    smudge = git-lfs smudge -- %f
    process = git-lfs filter-process
    required = true
[include]
    path = ~/.gituser-default
[includeIf "gitdir:~/Developer/Projects/Atradius/"]
    path = ~/Developer/Projects/Atradius/.gitconfig
[push]
    default = simple
[http]
	sslCAInfo = /Users/mlambrichs/.zcli/zscaler_root.pem
[init]
	defaultBranch = master
